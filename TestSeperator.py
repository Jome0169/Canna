X = [['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '364', '800', '10154', '8826', '56.51', '0.0', '452', '453', '171', '7'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '56', '331', '11065', '10244', '42.51', '0.0', '141', '287', '141', '7'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '951', '1027', '152648', '152887', '35.00', '7e-17', '50.8', '80', '49', '1'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '1040', '1087', '152902', '153066', '34.55', '7e-17', '38.5', '55', '29', '1'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '1096', '1214', '153090', '153446', '28.33', '7e-17', '41.6', '120', '84', '2'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '1079', '1131', '161027', '160869', '32.08', '1e-18', '33.1', '53', '36', '0'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '955', '1079', '161415', '161026', '37.40', '1e-18', '84.7', '131', '75', '3'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '766', '814', '161960', '161814', '36.73', '3e-04', '30.0', '49', '31', '0'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '622', '727', '162417', '162070', '23.08', '3e-04', '38.5', '117', '78', '2'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '618', '646', '46800', '46901', '32.35', '0.006', '19.2', '34', '18', '1'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '666', '727', '46966', '47151', '33.87', '0.006', '43.1', '62', '41', '0'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '745', '759', '47202', '47246', '46.67', '0.006', '19.6', '15', '8', '0'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '948', '990', '47704', '47832', '39.53', '2e-29', '37.4', '43', '26', '0'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '989', '1065', '47826', '48056', '41.56', '2e-29', '70.9', '77', '45', '0'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '1068', '1100', '48062', '48160', '54.55', '2e-29', '42.0', '33', '15', '0'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '1100', '1135', '48157', '48264', '50.00', '2e-29', '43.9', '36', '18', '0'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '56', '200', '66752', '67168', '27.59', '1e-06', '57.0', '145', '99', '3'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '307', '645', '67596', '68567', '30.29', '1e-25', '119', '350', '207', '8'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '560', '799', '68342', '69025', '36.07', '6e-31', '137', '244', '136', '5'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '1022', '1048', '8201', '8121', '62.96', '0.0', '39.7', '27', '10', '0'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '965', '1039', '8371', '8147', '52.00', '1e-13', '80.1', '75', '36', '0'], ['Gene.401::c25192_g1_i8::g.401::m.401', '000130F|quiver', '817', '981', '8847', '8320', '47.73', '0.0', '103', '176', '81', '2']]


def GroupFinders(arg1, RangeAround=2000):
    """TODO: Docstring for GroupFinders.

    :arg1: TODO
    :RangeAround: TODO
    :returns: TODO

    """
    run = []
    result = [run]
    RangeAround = None

    for item in arg1:
        MicroRange = xrange(item[4],item[5])
        if 












def group_consecutives(vals, step=1000):
    
    """Return list of consecutive lists of numbers from vals (number list)."""
    run = []
    result = [run]
    expect = None
    for v in vals:
        if (v == expect) or (expect is None) or v in range(expect, expect+20):
            run.append(v)
        else:
            run = [v]
            result.append(run)
        expect = v + step
    print result




group_consecutives(X)



